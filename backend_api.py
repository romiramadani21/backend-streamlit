# -*- coding: utf-8 -*-
"""Backend API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BJLztFM4B_BEQTUg1vO8fzgoJlR5ysxS
"""

import subprocess

def install_packages():
    packages = [
        'pyngrok',
        'gevent',
        'flask',
        'keras',
        'numpy',
        'pandas',
        'flask-ngrok',
        'tensorflow',
        'pillow'
    ]

    for package in packages:
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])

install_packages()

from __future__ import division, print_function

import sys, os, glob, re
import numpy as np

from keras.applications.imagenet_utils import preprocess_input, decode_predictions
from keras.models import load_model
from keras.preprocessing import image

from flask import Flask, redirect, url_for, request, render_template
from werkzeug.utils import secure_filename
from gevent.pywsgi import WSGIServer

import flask
from flask import request
import pandas as pd
import tensorflow as tf
import keras
import numpy as np
import random
import os
from os.path import join, dirname, realpath
from tensorflow.keras.preprocessing.image import img_to_array, load_img
from flask_ngrok import run_with_ngrok
from werkzeug.utils import secure_filename

from pyngrok import ngrok
ngrok.set_auth_token("2RygWzJKPT2qYMyNQ1TurNVPglP_4AyXQsNzM3LX5eHy5De9a")

app = Flask(__name__)

model = tf.keras.models.load_model('cnn_walet.h5')

run_with_ngrok(app)

@app.route('/', methods=['GET'])
def index():
  return "<center><div><image src='https://thumbs.gfycat.com/InfiniteRemarkableDesertpupfish-size_restricted.gif'></image></div></center>"

@app.route('/predict', methods=['GET', 'POST'])
def upload():
  data = {"success": False}
  namaFile = ''
  if request.method == 'POST':
    file = request.files['file']

    if file.filename == '':
      print('Tidak ada file')

    else:
      print('File berhasil di simpan')
      filename = secure_filename(file.filename)
      file.save('data_test/' + file.filename)
      namaFile = 'data_test/' + file.filename

      img = load_img(namaFile, target_size=(150, 150))
      x = img_to_array(img)
      x = x.reshape((1,) + x.shape)
      x = x / 255.0
      predict = model.predict(x)
      temp = 0
      all_label = []
      label = 0
      hasil = []
      name = ''
      for y in range(3):
        persentase = predict[0][y] * 100
        # print(persentase)
        all_label.append(round(persentase , 2))
        hasil.append(round(predict[0][y]*100,2))

        if persentase > temp:
          temp = persentase
          label = y

      if label == 0:
        name = 'Grade A'
      elif label == 1:
        name = 'Grade B'
      elif label == 2:
        name = 'Grade C'

      data['success'] = True
      data['label'] = label
      data['acc'] = temp
      data['name'] = name
      data['all_label'] = all_label

    print(data)
    return flask.jsonify(data)
  else:
    return '<h1>Method Salah</h1>'

app.run()

